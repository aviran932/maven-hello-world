name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Increase patch version
        id: increase_version
        run: |
          echo "update patch version..."
          sed -i 's/<version>\([0-9]*\.[0-9]*\.\)\([0-9]*\)-SNAPSHOT<\/version>/<version>\1$((\2+1))-SNAPSHOT<\/version>/' myapp/pom.xml
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "New version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compile the code
        run: mvn -f myapp/pom.xml clean compile

      - name: Package the application
        run: mvn -f myapp/pom.xml package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: myapp-jar
          path: myapp/target/*.jar

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t myapp:${{ env.VERSION }} .

      - name: Ensure non-root user in Dockerfile and build
        run: |
          echo "FROM amazoncorretto:17-alpine" > Dockerfile
          echo "RUN addgroup -S mygroup && adduser -S myuser -G mygroup" >> Dockerfile
          echo "USER myuser" >> Dockerfile
          echo "COPY --from=build /app/target/*.jar /app/app.jar" >> Dockerfile
          echo "CMD [\"java\", \"-jar\", \"/app/app.jar\"]" >> Dockerfile
          docker build -t myapp:${{ env.VERSION }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker tag myapp:${{ env.VERSION }} ${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:${{ env.VERSION }}

      - name: Pull and Run Docker image
        run: |
          echo "Running Docker image..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:${{ env.VERSION }}
          docker run -d -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:${{ env.VERSION }}

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Helm Dry Run
        run: |
          echo "Performing a Helm dry run..."
          helm upgrade --install myapp ./helm-chart --set image.repository=${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world --set image.tag=${{ env.VERSION }} --dry-run --debug
